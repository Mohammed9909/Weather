{"version":3,"sources":["List/City.js","App.js","index.js"],"names":["City","className","Button","variant","onClick","props","changeBody","data","deleteone","this","country","cityName","weather","toFixed","Clear","Rain","Storm","Snow","Mist","Clouds","main","Component","App","onTextBoxChange","e","console","log","target","value","setState","Search","cities","state","cName","axios","get","then","res","city","name","temp","sys","push","catch","error","clearList","index","indexOf","splice","findIndex","city2","newBody","prompt","setTimeout","cityList","weatherList","countryList","map","key","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","Divider","Form","inline","FormControl","type","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d637fa5a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap';\n\nexport default class City extends Component {\n\n    render() {\n        const icons = {\n            Clear: '‚òÄ',\n            Rain: 'Ô∏èüåß',\n            Storm: '‚õà',\n            Snow: 'üå®',\n            Mist: 'üå´',\n            Clouds: '‚òÅ',\n        };\n        return (\n            <div className=\"bar\">\n\n                <h2><Button variant=\"outline-success\" onClick={() => this.props.changeBody(this.props.data)}> Edit City </Button> <Button variant=\"outline-danger\" onClick={() => this.props.deleteone(this.props.data)}>delete</Button> {this.props.data.country} - {this.props.data.cityName}   {this.props.data.weather.toFixed(0)}¬∞C  {icons[this.props.data.main]}</h2>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport City from './List/City'\nimport { Button, Nav, NavDropdown, Navbar, Form, FormControl } from 'react-bootstrap';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      cityName: '',\n      cityList: [],\n      weather: '',\n      weatherList: [],\n      country: '',\n      countryList: [],\n      cities: []\n    }\n  }\n  onTextBoxChange = (e) => {\n    console.log('On Text Change', e.target.value);\n\n    this.setState({\n      cityName: e.target.value\n    });\n  }\n  Search = (e) => {\n    const cities = [...this.state.cities];\n    const cName = this.state.cityName ? this.state.cityName : e;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cName}&APPID=012692593491fb24c2a5e017bb7649fa`)\n      .then((res) => {\n        console.log(res.data);\n\n        const cityName = res.data.name;\n        const weather = res.data.main.temp - 273.15;\n        const country = res.data.sys.country;\n        const main = res.data.weather[0].main\n        const city = {\n          cityName: cityName,\n          weather: weather,\n          country: country,\n          main: main\n        }\n\n        cities.push(city);\n\n        this.setState({\n          cities: cities\n        })\n      })\n      .catch(() => {\n        console.error();\n      })\n\n    this.setState({\n      cityName: '',\n\n    });\n\n  }\n  clearList = (e) => {\n    this.setState({\n      cities: []\n    });\n  }\n\n  deleteone = (city) => {\n    let cities = [...this.state.cities]\n    let index = cities.indexOf(city)\n    cities.splice(index, 1)\n    this.setState({\n      cities: cities\n    })\n\n  }\n  changeBody = (city) => {\n    const cities = [...this.state.cities]\n    let index = cities.findIndex(city2 => {\n      return city2.cityName === city.cityName;\n    });\n    cities.splice(index, 1)\n    this.setState({\n      cities: cities\n    })\n    let newBody = prompt(\"What should the city be?\");\n\n    setTimeout(() => this.Search(newBody), 1000);\n  }\n\n  render() {\n    const cityList = this.state.cities.map((city, index) => {\n      return <City deleteone={this.deleteone} changeBody={this.changeBody} data={city} key={index} />\n    })\n    return (\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">WEATHER ‚òÄ</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <NavDropdown.Divider />\n                <Button variant=\"btn btn-danger\" onClick={this.clearList}>Delete All!</Button> \n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" value={this.state.cityName}\n                onChange={this.onTextBoxChange} />\n              <Button variant=\"outline-success\" onClick={this.Search}>Search</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        <footer className=\"footer\">\n      <div className=\"container\">\n        <div className=\"text-muted\">Created by Mohammed Al-Ofaysan</div>\n      </div>\n    </footer>\n        {cityList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n    "],"sourceRoot":""}